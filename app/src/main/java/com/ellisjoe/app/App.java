/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.ellisjoe.app;

import com.github.jknack.handlebars.Handlebars;
import com.github.jknack.handlebars.Template;
import io.undertow.Undertow;
import io.undertow.server.HttpHandler;
import io.undertow.server.HttpServerExchange;
import io.undertow.util.Headers;

import java.io.IOException;
import java.util.ArrayDeque;
import java.util.Optional;

public class App {
    private static final ArrayDeque<String> EMPTY = new ArrayDeque<>();

    public static void main(String[] args) throws IOException {
        Handlebars handlebars = new Handlebars();
        Template template = handlebars.compileInline("Hello {{this}}");

        Undertow server = Undertow.builder()
                .addHttpListener(8080, "localhost")
                .setHandler(new HttpHandler() {
                    @Override
                    public void handleRequest(final HttpServerExchange exchange) throws Exception {
                        String name = getQueryParam(exchange, "name").orElse("World");

                        exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, "text/plain");
                        exchange.getResponseSender().send(template.apply(name));
                    }
                }).build();
        server.start();
    }

    private static Optional<String> getQueryParam(HttpServerExchange exchange, String name) {
        return exchange.getQueryParameters().getOrDefault(name, EMPTY).stream().findFirst();
    }
}
